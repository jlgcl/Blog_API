* FRONTEND PLAN *

STATUS
    - create a routing for different pages: about page, home, posts, user page, unpublished posts (link from the user page)
        - create a Bootstrap navigation bar for these routes
            - create custom navbar design: different fonts, logo, bar design, etc.
            - make sticky navbar OR arrow to top of the page 
        - route for login page w/ form inputs - COMPLETED
    - contact form fields (contact info on the right side, fields on the left)
    Home:
        - current weather: Geolocation API?
        - scroll right to see more cards THEN link to the full category site
        - flip cards for details?
        - link the post data to the cards***
    Each Category Page:
        - start with All Posts
            - page layout:
                - page details - COMPLETED
                - page update - COMPLETED
                - latest 3 posts as big blocks w/ images at the top - fetch GET data responds with an array with the latest element being the most recently created post. - COMPLETED
                - rest as flexbox blocks w/ images - COMPLETED
                - at componentDidMount() include 2 functions: obtain all published post documents, obtain all images documents corresponding to the uids of the posts (uid sorting done at client-side) - same array order as the posts.
                    - router.get("/posts") async.parallel to find both posts and images won't work since images won't be in order for specific category queries. - COMPLETED
                    - //SENDING A REQUEST WITH AN OBJECT OF UIDs??? - COMPLETED
            - create a post - COMPLETED
                - ***IMAGE UPLOAD***
                    - create a separate image model @ backend.
                    - make post_id state for the current post so that the image upload can also save it as its uid as well (shared IDs) - COMPLETED
                    - upload image to cloud (i.e. Google Cloud) or local storage & handle post data that is created - COMPLETED
                        - the image model contains a path indicating the storage location to have access later (i.e. update), and a uid to match with a post uid. - COMPLETED
    Each post (main tasks):
        - update post page
        - comment - like/dislike (sort by like?) - COMPLETED
            - create a Comment model that has like, dislike (default: 0), commentMessage. Whenever a like/dislike is clicked, POST the number to add to the existing # of likes/dislikes.
            - use a rich text editor to enter comments - when a submit button is pressed, POST the comment to database.
            - GET the current Comment model pertaining to the post & display in JSX DOM.
            - Sorting by likes/dislikes??? - maybe tricky
    

ERRORS/LEARNED (also see the project notes in Web Dev Notes)
    - 'Home is not exported from ./routes/home' - don't need to destructure the import (i.e. import { Home }) since we are directly pointing at the object.
    - center Carousel images: mx-auto in className
    - React can't handle every CSS styles inline (i.e. margin-left) - use other methods.
    - review setting up fetch headers
    - to call a function in JSX, use: {this.renderFunction()} in render().
    - see login component & package.json to see how data is fetched from backend w/ different URL (CORS)
    - use "window.location.href = "url"" to redirect upon fetch res.
        - on redirect, POST /login will show 301/302 - this still means login succeeded, but it's redirecting to other url.
    - Error: Objects are not valid as a React child (found: [object Promise]). If you meant to render a collection of children, use an array instead.
        - NOT A SOLUTION: https://stackoverflow.com/questions/47658765/objects-are-not-valid-as-a-react-child-found-object-promise/47659112
    - See Web Dev project notes & codes for this project for file upload process: server-side (multers, storage, etc.), client-side (fetch method, multipart/form-data, lifting states, etc.)
    - "unexpected token < in JSON at position 0" OR issues with objects to render
        - SOLVED) server side responses must be res.json() & client side fetch returns should be await returnedRes.json().
        - if 'await' is not included, the json returned response from the server would still be a Promise object, which is not possible to render in JSX.
        - the request MUST be an object (JSON is an object notation) - the request body can't just be a string.
    - Render the last element of the state array
        - SOLVED) need empty placeholders to render something at start because render() will execute before componentDidMount() fills in the state array. 
        - Functions inside React components (not functional components) can return JSX & functional components canâ€™t manage JS operations, but just return JSX DOM.
    - React Router <Switch>
    - Multer /uploads file becomes /posts/uploads when routed from the parent /posts directory - results in 401 error when trying to get the file from that directory inside the child component.
        - /posts + id is required for routing in order to load the parent states/contents to pass onto the child component; otherwise, the child component won't load anything at load.
        SOLVED) source url(../imgPath) to avoid /post/uploads
    - Follow the Mongoose doc method for findByIdAndUpdate().
    ... continued in the Web Dev Notes file.

PLAN
    - for individual post thumbnail (in each post route), have summary input with character limit to show consistent thumbnail block size for all posts.
    - use compositions/specializations to incorporate components.
    - Nav pages should be routed through React router.
    - Use custom styling (media queries, colors, etc.) using a separate CSS file OR use styled-components.
    - no need for: context, HOC.
    - need: forms/handling events, router, conditional rendering, lifting state up, etc.
    - mobile view - Responsive view

COMPLETED
    - main nav bar Bootstrap spacing
    - dark footer area
    - navbar "Log In" should change to "Sign Out" if a user is logged into session
    - Signout
    - signup
    Home:
        - create a carousel to show main headlines
        - create cards of featured/latest posts with only LIMITED summary view (read more...)
